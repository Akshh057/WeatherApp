{"version":3,"sources":["components/Tempapp.js","App.js","index.js"],"names":["Tempapp","useState","city","country","weather","name","fetching","err","data","setData","search","setSearch","fetchApi","React","useCallback","a","console","log","axios","get","response","prevState","main","sys","message","cod","className","type","value","onChange","e","target","length","onClick","style","textTransform","src","icon","alt","temp","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA4GeA,EAvGC,WAEZ,MAAwBC,mBAAS,CAC7BC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,UAAU,EACVC,IAAK,KANT,mBAAOC,EAAP,KAAaC,EAAb,KAQA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KAEMC,EAAWC,IAAMC,YAAN,sBAAkB,4BAAAC,EAAA,6DAC/BC,QAAQC,IAAI,SADmB,kBAGJC,IAAMC,IAAN,4DAA+DT,EAA/D,yDAHI,QAGrBU,EAHqB,QAIlBZ,MAAQC,GAAQ,SAACY,GACtB,OAAO,2BACAA,GADP,IAEInB,KAAMkB,EAASZ,KAAKc,KACpBnB,QAASiB,EAASZ,KAAKe,IACvBnB,QAASgB,EAASZ,KAAKJ,QAAQ,GAC/BC,KAAMe,EAASZ,KAAKH,KACpBC,UAAU,OAXS,gDAe3BG,GAAQ,SAACY,GACL,OAAO,2BACAA,GADP,IAEId,IAAI,GAAD,OAAK,KAAMa,SAAN,UAAoB,KAAMA,SAASZ,KAAKgB,QAAxC,aAAoD,KAAMJ,SAASZ,KAAKiB,IAAxE,0BAA+F,KAAMD,SAA1G,UAlBgB,yDAsBhC,CAACd,IAoBJ,OADAM,QAAQC,IAAIT,EAAKD,IAAIiB,SAEjB,mCACI,sBAAKE,UAAU,YAAf,UACI,qBAAIA,UAAU,UAAd,wBAEI,wFAEJ,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,eACzBE,MAAOlB,EACPmB,SA9BV,SAACC,GACmB,IAA1BA,EAAEC,OAAOH,MAAMI,QACfvB,GAAQ,SAACY,GACL,OAAO,2BACAA,GADP,IAEInB,KAAM,GACNC,QAAS,GACTE,KAAM,GACNC,UAAU,EACVC,IAAK,QAIjBI,EACImB,EAAEC,OAAOH,UAkBG,wBAAQK,QAASvB,EAAOsB,OAAS,EAAIpB,EAAW,KAAMc,UAAU,YAAhE,wBAIe,IAAlBlB,EAAKF,SACF,mCACKE,EAAKD,IAAIyB,OAAS,EAAI,mBAAGE,MAAO,CAAEC,cAAe,cAA3B,yBAAqD3B,EAAKD,OAAa,4DAGlG,sBAAKmB,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAf,SAEK,qBAAKU,IAAG,4CAAuC5B,EAAKJ,QAAQiC,KAApD,WAAmEC,IAAI,mBAEpF,qBAAIZ,UAAU,iBAAd,UACI,cAAC,IAAD,IADJ,IACgClB,EAAKH,QAErC,qBAAIqB,UAAU,OAAd,UACKlB,EAAKN,KAAKqC,KADf,cAGA,2CACc/B,EAAKL,QAAQA,WAE3B,qBAAIuB,UAAU,eAAd,kBACUlB,EAAKN,KAAKsC,SADpB,YACuChC,EAAKN,KAAKuC,eAKzD,gF,MC3FLC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.330410ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./CSS/style.css\";\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport axios from 'axios';\r\n\r\nconst Tempapp = () => {\r\n\r\n    const [data, setData] = useState({\r\n        city: {},\r\n        country: {},\r\n        weather: {},\r\n        name: '',\r\n        fetching: true,\r\n        err: ''\r\n    });\r\n    const [search, setSearch] = useState(\"\"); //112173060a86fb43967cc14bc0b6d40b\r\n\r\n    const fetchApi = React.useCallback(async () => {\r\n        console.log('enter')\r\n        try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=112173060a86fb43967cc14bc0b6d40b`);\r\n            response.data && setData((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    city: response.data.main,\r\n                    country: response.data.sys,\r\n                    weather: response.data.weather[0],\r\n                    name: response.data.name,\r\n                    fetching: false\r\n                }\r\n            })\r\n        } catch (Error) {\r\n            setData((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    err: `${Error.response ? `${Error.response.data.message} (${Error.response.data.cod})` : `There is a ${Error.message}`} `\r\n                }\r\n            })\r\n        }\r\n    }, [search])\r\n    const check = (e) => {\r\n        if (e.target.value.length === 0) {\r\n            setData((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    city: {},\r\n                    country: {},\r\n                    name: '',\r\n                    fetching: true,\r\n                    err: ''\r\n                }\r\n            })\r\n        }\r\n        setSearch(\r\n            e.target.value\r\n        )\r\n\r\n    }\r\n    console.log(data.err.message)\r\n    return (\r\n        <>\r\n            <div className=\"main__div\">\r\n                <h1 className=\"heading\">\r\n                    Weather App\r\n                    <span>üåûüå§Ô∏è üå¶Ô∏è</span>\r\n                </h1>\r\n                <div className=\"temp__div\">\r\n                    <div className=\"input__data\">\r\n                        <input type=\"text\" className=\"input__field\"\r\n                            value={search}\r\n                            onChange={check}\r\n                        />\r\n                        <button onClick={search.length > 0 ? fetchApi : null} className=\"searchBtn\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                    {data.fetching === true ? (\r\n                        <>\r\n                            {data.err.length > 0 ? <p style={{ textTransform: 'capitalize' }}>{`Oops! ${data.err}`}</p> : <p > Please Enter City Name !</p>}\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"temp__info\">\r\n                            <div className=\"icons\">\r\n                                {/* <WbSunnyIcon /> */}\r\n                                {<img src={`https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`} alt=\"Weather Icon\" />}\r\n                            </div>\r\n                            <h1 className=\"temp__location\">\r\n                                <LocationOnOutlinedIcon /> {data.name}\r\n                            </h1>\r\n                            <h2 className=\"temp\">\r\n                                {data.city.temp}¬∞ Cel\r\n                            </h2>\r\n                            <h3>\r\n                                Country: {data.country.country}\r\n                            </h3>\r\n                            <h4 className=\"tempmin__max\">\r\n                                Min :{data.city.temp_min} | Max : {data.city.temp_max}\r\n                            </h4>\r\n                        </div>\r\n\r\n                    )}\r\n                    <footer> Made with ‚ù§Ô∏è by Akshat</footer>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tempapp\r\n","import Tempapp from './components/Tempapp';\r\nimport './App.css'\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Tempapp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}